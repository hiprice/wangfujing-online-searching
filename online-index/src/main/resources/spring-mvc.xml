<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task.xsd">
    <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:zookeeper.properties</value>
                <value>classpath:es.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="defaultContentType" value="text/html"/>
        <property name="favorParameter" value="true"/>
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="gif" value="image/gif"/>
                <entry key="jpg" value="image/jpeg"/>
                <entry key="jpeg" value="image/jpeg"/>
                <entry key="png" value="image/png"/>
                <entry key="ico" value="image/bmp"/>
                <entry key="js" value="text/javascript"/>
            </map>
        </property>
        <property name="parameterName" value="format"/>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <property name="viewClass"
                              value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 定义切面开始 { -->
    <bean id="webOperationRecordAspect" class="com.wfj.search.util.web.record.WebOperationRecordAspect">
        <property name="appName" value="${monitor.register.appName}"/>
        <property name="instanceName" ref="instanceName"/>
        <property name="resultHandler">
            <bean class="com.wfj.search.util.web.record.json.PlainJsonResultHandler"/>
        </property>
        <property name="recorder" ref="elasticSearchRecorder"/>
        <property name="throwableHandler">
            <bean class="com.wfj.search.util.web.record.json.JsonResultThrowableHandler"/>
        </property>
    </bean>
    <bean id="mqWebOperationRecordAspect" class="com.wfj.search.util.web.record.MqWebOperationRecordAspect">
        <property name="appName" value="${monitor.register.appName}"/>
        <property name="instanceName" ref="instanceName"/>
        <property name="resultHandler">
            <bean class="com.wfj.search.util.web.record.json.MqJsonResultHandler"/>
        </property>
        <property name="recorder" ref="elasticSearchRecorder"/>
        <property name="throwableHandler">
            <bean class="com.wfj.search.util.web.record.json.JsonResultThrowableHandler"/>
        </property>
    </bean>
    <bean id="statusCodeAspect" class="com.wfj.search.utils.web.sc.StatusCodeAspect">
        <property name="resultHandler">
            <bean class="com.wfj.search.util.web.record.json.PlainJsonResultHandler"/>
        </property>
    </bean>
    <bean id="dbPubKeyBase64StrProvider"
          class="com.wfj.search.utils.web.signature.verify.DbPublicKeyBase64StringProvider">
        <property name="dataSource" ref="dbDataSource"/>
    </bean>
    <bean id="cacheablePubKeyBase64StrProvider"
          class="com.wfj.search.utils.web.signature.verify.CacheableDelegatePublicKeyBase64StringProvider">
        <property name="delegate" ref="dbPubKeyBase64StrProvider"/>
    </bean>
    <bean id="base64PubKeyProvider" class="com.wfj.search.utils.web.signature.verify.Base64PublicKeyProvider">
        <property name="pubKeyBase64StrProvider" ref="cacheablePubKeyBase64StrProvider"/>
    </bean>
    <bean id="jsonSignVerifyAspect" class="com.wfj.search.utils.web.signature.verify.JsonSignVerifyAspect">
        <property name="publicKeyProvider" ref="base64PubKeyProvider"/>
        <property name="resultHandler">
            <bean class="com.wfj.search.util.web.record.json.PlainJsonResultHandler"/>
        </property>
    </bean>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="webOperation"
                      expression="@annotation(com.wfj.search.util.web.record.WebOperation) and execution(com.alibaba.fastjson.JSONObject *.*(..))"/>
        <aop:pointcut id="mqWebOperation"
                      expression="@annotation(com.wfj.search.util.web.record.MqWebOperation) and execution(com.alibaba.fastjson.JSONObject *.*(..))"/>
        <aop:pointcut id="jsonSignVerifyPointcut"
                      expression="@annotation(com.wfj.search.utils.web.signature.verify.JsonSignVerify) and execution(com.alibaba.fastjson.JSONObject *.*(..))"/>
        <aop:aspect order="0" ref="webOperationRecordAspect">
            <aop:around method="around" pointcut-ref="webOperation"/>
        </aop:aspect>
        <aop:aspect order="0" ref="mqWebOperationRecordAspect">
            <aop:around method="around" pointcut-ref="mqWebOperation"/>
        </aop:aspect>
        <aop:aspect order="2" ref="jsonSignVerifyAspect">
            <aop:around method="around" pointcut-ref="jsonSignVerifyPointcut"/>
        </aop:aspect>
        <aop:aspect order="3" ref="statusCodeAspect">
            <aop:around method="around" pointcut-ref="webOperation"/>
        </aop:aspect>
        <aop:aspect order="3" ref="statusCodeAspect">
            <aop:around method="around" pointcut-ref="mqWebOperation"/>
        </aop:aspect>
    </aop:config>
    <!-- } 定义切面结束 -->

    <context:component-scan base-package="com.wfj.search.online.index.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="springWebMvcServiceScanner" class="com.wfj.search.utils.zookeeper.discovery.SpringWebMvcServiceScanner"/>
    <bean id="register" class="com.wfj.search.utils.zookeeper.discovery.SpringWebMvcServiceRegister">
        <constructor-arg name="springWebMvcServiceScanner" ref="springWebMvcServiceScanner"/>
        <constructor-arg name="nodeHost" ref="instanceHost"/>
        <constructor-arg name="servicePort" ref="servicePort"/>
        <constructor-arg name="zkClient" ref="zkClient"/>
        <constructor-arg name="basePath" value="${discovery.basePath}"/>
    </bean>
    <bean id="serviceDiscoveryRegisterJob"
          class="com.wfj.search.utils.zookeeper.discovery.SpringWebMvcServiceRegisterJob">
        <constructor-arg name="register" ref="register"/>
    </bean>
    <task:scheduled-tasks scheduler="scheduler">
        <task:scheduled ref="serviceDiscoveryRegisterJob" method="work" initial-delay="4000"
                        fixed-delay="30000"/>
    </task:scheduled-tasks>
</beans>